{"version":3,"sources":["../src/manager.tsx","../src/constants.ts","../src/features/panel/components/Panel.tsx","../src/features/panel/hooks/useAddonVersions.ts","../src/features/panel/components/InformationBanner.tsx","../src/features/panel/components/PanelContent.tsx","../src/features/panel/components/InspectorContainer.tsx","../src/features/panel/components/RouterEventDisplayWrapper.tsx","../src/features/panel/components/ThemedInspector.tsx","../src/features/panel/components/PanelTitle.tsx"],"names":["addons","types","React","ADDON_ID","PANEL_ID","PARAM_KEY","EVENTS","AddonPanel","STORY_CHANGED","useChannel","useState","compareVersions","useEffect","useAddonVersions","currentVersion","setCurrentVersion","latestVersion","setLatestVersion","abortController","b","json","getAddonVersion","v","newVersionAvailable","styled","InformationBanner","ActionBar","ScrollArea","Fragment","InspectorContainer","RouterEventDisplayWrapper","withTheme","ObjectInspector","ThemedInspector","theme","props","PatchedScrollArea","PanelContent","routerEvents","onClear","Wrapper","event","humanReadableEventNames","children","title","Panel","navigationEvents","setNavigationEvents","latestAddonVersion","addonUpdateAvailable","pushEvent","prev","clear","ManagerContext","useContext","PanelTitle","api","badgeCount","setBadgeCount","incrementBadgeCount","previous","clearBadgeCount","suffixes","viewMode","active"],"mappings":"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","sourcesContent":["import { addons, types } from '@storybook/manager-api';\nimport React from 'react';\n\nimport { ADDON_ID, PANEL_ID, PARAM_KEY } from './constants';\nimport { Panel } from './features/panel/components/Panel';\nimport { PanelTitle } from './features/panel/components/PanelTitle';\n\naddons.register(ADDON_ID, (api) => {\n  addons.add(PANEL_ID, {\n    type: types.PANEL,\n    paramKey: PARAM_KEY,\n    title: <PanelTitle />,\n    match: ({ viewMode }) => viewMode === 'story',\n    render: ({ active }) => <Panel active={active || false} api={api} key={ADDON_ID} />,\n  });\n});\n","export const ADDON_ID = 'storybook/react-router-v6';\nexport const PANEL_ID = `${ADDON_ID}/panel`;\nexport const PARAM_KEY = `reactRouter`;\n\nexport const EVENTS = {\n  CLEAR: `${ADDON_ID}/clear`,\n  NAVIGATION: `${ADDON_ID}/navigation`,\n  STORY_LOADED: `${ADDON_ID}/story-loaded`,\n  ROUTE_MATCHES: `${ADDON_ID}/route-matches`,\n  ACTION_INVOKED: `${ADDON_ID}/action_invoked`,\n  ACTION_SETTLED: `${ADDON_ID}/action_settled`,\n  LOADER_INVOKED: `${ADDON_ID}/loader_invoked`,\n  LOADER_SETTLED: `${ADDON_ID}/loader_settled`,\n} as const;\n","import { AddonPanel } from '@storybook/components';\nimport { STORY_CHANGED } from '@storybook/core-events';\nimport { API, useChannel } from '@storybook/manager-api';\nimport React, { useState } from 'react';\nimport { EVENTS } from '../../../constants';\nimport { useAddonVersions } from '../hooks/useAddonVersions';\nimport { RouterEvent } from '../types';\nimport { InformationBanner } from './InformationBanner';\nimport { PanelContent } from './PanelContent';\n\ninterface PanelProps {\n  active: boolean;\n  api: API;\n}\n\nexport const Panel: React.FC<PanelProps> = (props) => {\n  const [navigationEvents, setNavigationEvents] = useState<RouterEvent[]>([]);\n  const { latestAddonVersion, addonUpdateAvailable } = useAddonVersions();\n\n  const pushEvent = (event: RouterEvent) => {\n    setNavigationEvents((prev) => [...prev, event]);\n  };\n\n  useChannel({\n    [EVENTS.ROUTE_MATCHES]: pushEvent,\n    [EVENTS.NAVIGATION]: pushEvent,\n    [EVENTS.STORY_LOADED]: pushEvent,\n    [EVENTS.ACTION_INVOKED]: pushEvent,\n    [EVENTS.ACTION_SETTLED]: pushEvent,\n    [EVENTS.LOADER_INVOKED]: pushEvent,\n    [EVENTS.LOADER_SETTLED]: pushEvent,\n    [STORY_CHANGED]: () => setNavigationEvents([]),\n  });\n\n  const clear = () => {\n    props.api.emit(EVENTS.CLEAR);\n    setNavigationEvents([]);\n  };\n\n  return (\n    <AddonPanel {...props}>\n      {addonUpdateAvailable && (\n        <InformationBanner>\n          Version {latestAddonVersion} is now available !{' '}\n          <a\n            href={`https://github.com/JesusTheHun/storybook-addon-remix-react-router/releases/tag/v${latestAddonVersion}`}\n          >\n            Changelog\n          </a>\n          .\n        </InformationBanner>\n      )}\n      <PanelContent routerEvents={navigationEvents} onClear={clear} />\n    </AddonPanel>\n  );\n};\n","import { compareVersions } from 'compare-versions';\nimport { useEffect, useState } from 'react';\n\nexport function useAddonVersions() {\n  const [currentVersion, setCurrentVersion] = useState<string>();\n  const [latestVersion, setLatestVersion] = useState<string>();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    fetch(`https://registry.npmjs.org/storybook-addon-remix-react-router/latest`, { signal: abortController.signal })\n      .then((b) => b.json())\n      .then((json) => setLatestVersion(json.version))\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      .catch(() => {});\n\n    return () => abortController.abort();\n  }, []);\n\n  useEffect(() => {\n    getAddonVersion().then((v) => setCurrentVersion(v));\n  }, []);\n\n  const newVersionAvailable =\n    !latestVersion || !currentVersion ? undefined : compareVersions(latestVersion, currentVersion) === 1;\n\n  return {\n    currentAddonVersion: currentVersion,\n    latestAddonVersion: latestVersion,\n    addonUpdateAvailable: newVersionAvailable,\n  };\n}\n\nasync function getAddonVersion() {\n  try {\n    const packageJson = await import('../../../../package.json', {\n      with: {\n        type: 'json',\n      },\n    });\n\n    return packageJson.version;\n  } catch (error) {\n    const packageJson = await import('../../../../package.json', {\n      assert: {\n        type: 'json',\n      },\n    });\n\n    return packageJson.version;\n  }\n}\n","import { styled } from '@storybook/theming';\n\nexport const InformationBanner = styled.p`\n  background: #ffebba;\n  padding: 5px;\n  margin-top: 0;\n`;\n","import { ActionBar, ScrollArea } from '@storybook/components';\nimport { styled } from '@storybook/theming';\nimport React, { Fragment, PropsWithChildren } from 'react';\nimport { EVENTS } from '../../../constants';\nimport { FCC } from '../../../fixes';\nimport { RouterEvent, RouterEvents } from '../types';\nimport { InspectorContainer } from './InspectorContainer';\nimport { RouterEventDisplayWrapper } from './RouterEventDisplayWrapper';\nimport { ThemedInspector } from './ThemedInspector';\n\nexport type PanelContentProps = {\n  routerEvents: Array<RouterEvent>;\n  onClear: () => void;\n};\n\nexport type ScrollAreaProps = PropsWithChildren<{\n  horizontal?: boolean;\n  vertical?: boolean;\n  className?: string;\n  title: string;\n}>;\nconst PatchedScrollArea = ScrollArea as FCC<ScrollAreaProps>;\n\nexport const PanelContent: FCC<PanelContentProps> = ({ routerEvents, onClear }) => {\n  return (\n    <Fragment>\n      <Wrapper title=\"reactRouterLogger\">\n        {routerEvents.map((event, i) => {\n          return (\n            <RouterEventDisplayWrapper key={i}>\n              <InspectorContainer>\n                <ThemedInspector\n                  name={humanReadableEventNames[event.type]}\n                  data={event.data}\n                  showNonenumerable={false}\n                  sortObjectKeys={false}\n                  expandPaths={[\n                    '$.routeParams',\n                    '$.searchParams',\n                    '$.routeMatches.*',\n                    '$.routeMatches.*.*',\n                    '$.matches',\n                    '$.matches.*',\n                    '$.matches.*.*',\n                  ]}\n                />\n              </InspectorContainer>\n            </RouterEventDisplayWrapper>\n          );\n        })}\n      </Wrapper>\n\n      <ActionBar actionItems={[{ title: 'Clear', onClick: onClear }]} />\n    </Fragment>\n  );\n};\n\nexport const humanReadableEventNames: Record<RouterEvents[keyof RouterEvents], string> = {\n  [EVENTS.NAVIGATION]: 'Navigate',\n  [EVENTS.STORY_LOADED]: 'Story rendered',\n  [EVENTS.ROUTE_MATCHES]: 'New route matches',\n  [EVENTS.ACTION_INVOKED]: 'Action invoked',\n  [EVENTS.ACTION_SETTLED]: 'Action settled',\n  [EVENTS.LOADER_INVOKED]: 'Loader invoked',\n  [EVENTS.LOADER_SETTLED]: 'Loader settled',\n};\n\nexport const Wrapper = styled(({ children, title }: ScrollAreaProps) => (\n  <PatchedScrollArea horizontal vertical title={title}>\n    {children}\n  </PatchedScrollArea>\n))({\n  margin: 0,\n  padding: '10px 5px 20px',\n});\nWrapper.displayName = 'Wrapper';\n","import { styled } from '@storybook/theming';\n\nexport const InspectorContainer = styled.div({\n  flex: 1,\n  padding: '0 0 0 5px',\n});\n","import { styled } from '@storybook/theming';\n\nexport const RouterEventDisplayWrapper = styled.div({\n  display: 'flex',\n  padding: 0,\n  borderLeft: '5px solid transparent',\n  borderBottom: '1px solid transparent',\n  transition: 'all 0.1s',\n  alignItems: 'flex-start',\n  whiteSpace: 'pre',\n});\n","import React from 'react';\nimport type { Theme } from '@storybook/theming';\nimport { withTheme } from '@storybook/theming';\nimport { ObjectInspector } from 'react-inspector';\n\ninterface InspectorProps {\n  theme: Theme;\n  sortObjectKeys?: boolean;\n  showNonenumerable?: boolean;\n  name: any;\n  data: any;\n  depth?: number;\n  expandPaths?: string | string[];\n}\n\nexport const ThemedInspector = withTheme(({ theme, ...props }: InspectorProps) => (\n  <ObjectInspector theme={theme.addonActionsTheme || 'chromeLight'} {...props} />\n));\n","import { STORY_CHANGED } from '@storybook/core-events';\nimport { ManagerContext } from '@storybook/manager-api';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { EVENTS } from '../../../constants';\nimport { useAddonVersions } from '../hooks/useAddonVersions';\n\nexport function PanelTitle() {\n  const { api } = useContext(ManagerContext);\n  const { addonUpdateAvailable } = useAddonVersions();\n\n  const [badgeCount, setBadgeCount] = useState(0);\n  const incrementBadgeCount = () => setBadgeCount((previous) => previous + 1);\n  const clearBadgeCount = () => setBadgeCount(0);\n\n  useEffect(() => {\n    api.on(STORY_CHANGED, clearBadgeCount);\n    api.on(EVENTS.ROUTE_MATCHES, incrementBadgeCount);\n    api.on(EVENTS.NAVIGATION, incrementBadgeCount);\n    api.on(EVENTS.ACTION_INVOKED, incrementBadgeCount);\n    api.on(EVENTS.ACTION_SETTLED, incrementBadgeCount);\n    api.on(EVENTS.LOADER_INVOKED, incrementBadgeCount);\n    api.on(EVENTS.LOADER_SETTLED, incrementBadgeCount);\n    api.on(EVENTS.CLEAR, clearBadgeCount);\n\n    return () => {\n      api.off(STORY_CHANGED, clearBadgeCount);\n      api.off(EVENTS.ROUTE_MATCHES, incrementBadgeCount);\n      api.off(EVENTS.NAVIGATION, incrementBadgeCount);\n      api.off(EVENTS.ACTION_INVOKED, incrementBadgeCount);\n      api.off(EVENTS.ACTION_SETTLED, incrementBadgeCount);\n      api.off(EVENTS.LOADER_INVOKED, incrementBadgeCount);\n      api.off(EVENTS.LOADER_SETTLED, incrementBadgeCount);\n      api.off(EVENTS.CLEAR, clearBadgeCount);\n    };\n  }, [api]);\n\n  const suffixes: string[] = [];\n\n  if (addonUpdateAvailable) suffixes.push('⚡️');\n  if (badgeCount) suffixes.push(`(${badgeCount})`);\n\n  return <>React Router {suffixes.join(' ')}</>;\n}\n"]}